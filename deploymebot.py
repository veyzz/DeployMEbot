# -*- coding: utf-8 -*-
import telebot
from telebot import apihelper, types
import cherrypy
import os
import zipfile
import json
import re
import time
import random
import backend
from backend import SQLighter
from backend import config

MODE = config.mode
TOKEN = config.token
PROXYLIST = config.proxy
DB = config.db
BOTS_COUNT = config.bots_count
COMMANDS = config.commands
PATH = os.getcwd()
EPOCH = config.epoch

bot = telebot.TeleBot(TOKEN)
logger = backend.get_logger('Main', './log/deploymebot.log')
logger.info('DeployMeBot started')


class WebhookServer:
    @cherrypy.expose
    def index(self):
        length = int(cherrypy.request.headers['content-length'])
        json_string = cherrypy.request.body.read(length).decode("utf-8")
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''


@bot.message_handler(commands=['start', 'help'])
def _(message):
    response = '''–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –í–∞—à–µ–≥–æ –±–æ—Ç–∞
–Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —á—Ç–æ–±—ã –¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –∑–∞–ø—É—â–µ–Ω–Ω—ã–º 24/7.'''
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    keyboard.row('‚ú®–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å‚ú®')
    bot.send_message(message.chat.id, response, reply_markup=keyboard)
    db = SQLighter(DB)
    if not db.get_user(message.from_user.id):
        if re.search('/start (\w+)', message.text):
            ref = re.search('/start (\w+)', message.text).group(1)
            user = db.get_ref(ref)
            if user:
                db.insert_user(message.from_user.id, user[0])
                db.update_user(user[0], ref_count=user[3] + 1)
                try:
                    response = "–ü–æ—Ö–æ–∂–µ, –∫—Ç–æ-—Ç–æ –ø—Ä–∏—à–µ–ª –∫ –Ω–∞–º –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ. –°–ø–∞—Å–∏–±–æ."
                    bot.send_message(user[0], response)
                except Exception as e:
                    print(e)
    if not db.get_user(message.from_user.id):
        db.insert_user(message.from_user.id)


@bot.message_handler(content_types=['document'])
def _(message):
    mes = None
    try:
        mes = bot.reply_to(message, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...")
        user_id = message.from_user.id
        file_name = re.sub(r'[^A-z0-9\.]', '', message.document.file_name)
        bot_name, _ = os.path.splitext(file_name)
        downloaded_file = bot.download_file(
            bot.get_file(message.document.file_id).file_path)
        if message.document.mime_type != "application/zip":
            bot.edit_message_text("–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ zip!", mes.chat.id,
                                  mes.message_id)
            return
        path = f'./download/{user_id}/'
        if not os.path.exists(path):
            os.makedirs(path)
        path += file_name
        path = os.path.abspath(path)
        with open(path, 'wb') as file:
            file.write(downloaded_file)
        with zipfile.ZipFile(path, 'r') as z:
            files = z.namelist()
        req = False
        st = False
        for element in files:
            if 'requirements.txt' in element:
                req = True
            if 'tostart.txt' in element:
                st = True
        err = ""
        if not req:
            err += "–í—ã –∑–∞–±—ã–ª–∏ —Ñ–∞–π–ª requirements.txt\n"
        if not st:
            err += "–í—ã –∑–∞–±—ã–ª–∏ —Ñ–∞–π–ª tostart.txt\n"
        if not (req and st):
            os.remove(path)
            bot.edit_message_text(err, mes.chat.id, mes.message_id)
            return
        db = SQLighter(DB)
        bots = db.get_bots(user_id)
        exist = False
        for item in bots:
            if bot_name in item:
                db.update_bot(item[0], status=False)
                bot_id = item[0]
                exist = True
        if not exist:
            bot_id = backend.get_hash(user_id) + backend.get_hash(
                int(time.time() - EPOCH))
            db.insert_bot(bot_id, bot_name, False, 0, user_id)
        backend.deploy(bot_id, user_id, file_name)
        bot.edit_message_text("–§–∞–π–ª –ø—Ä–∏–Ω—è—Ç!", mes.chat.id, mes.message_id)
    except Exception as e:
        if mes:
            bot.edit_message_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                                  mes.chat.id, mes.message_id)
        else:
            bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        if not db.get_user(message.from_user.id):
            db.insert_user(message.from_user.id)
        print("error: ", e)


@bot.message_handler(regexp='/bot_(\w+) (\w+)')
def _(message):
    if re.search('/bot_(\w+) (\w+)', message.text):
        reg = re.search('/bot_(\w+) (\w+)', message.text)
        command = reg.group(1)
        bot_id = reg.group(2)
        if command in COMMANDS:
            db = SQLighter(DB)
            bots = db.get_bots(message.from_user.id)
            bot_name = ''
            for item in bots:
                if str(item[0]) == bot_id:
                    bot_name = item[1]
                    break
            if bot_name:
                result = backend.controlbot(bot_id, command)
                if result:
                    bot.send_message(message.from_user.id, result)
            else:
                response = "<i>–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –±–æ—Ç–∞...</i>"
                keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                     row_width=3)
                keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞")
                keyboard.row("üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
                bot.send_message(message.chat.id,
                                 response,
                                 reply_markup=keyboard,
                                 parse_mode='html')
        else:
            response = "<i>Forbidden</i>"
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                                 row_width=3)
            keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞")
            keyboard.row("üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
            bot.send_message(message.chat.id,
                             response,
                             reply_markup=keyboard,
                             parse_mode='html')


@bot.message_handler(content_types=["text"])
def _(message):
    if message.text == "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞":
        response = '''–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ <i>*.zip</i> –≤ –∫–æ—Ç–æ—Ä–æ–º –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã:
- <code>requerements.txt</code>, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
- <code>tostart.txt</code>, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω–æ, –∫–∞–∫–æ–π —Ñ–∞–π–ª –Ω–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å
<b>–í–∞–∂–Ω–æ! –£ –Ω–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python 3.6.8,
–ü–æ–∑–∞–±–æ—Ç—å—Ç–µ—Å—å –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –í–∞—à–µ–≥–æ –∫–æ–¥–∞!</b>'''
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞")
        keyboard.row("üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id,
                         response,
                         reply_markup=keyboard,
                         parse_mode='html')
    elif message.text == "üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è":
        db = SQLighter(DB)
        bots = db.get_bots(message.from_user.id)
        response = ""
        for item in bots:
            try:
                if backend.check_status(item[0]):
                    status = "–ó–∞–ø—É—â–µ–Ω"
                else:
                    status = "–í—ã–∫–ª—é—á–µ–Ω"
            except:
                status = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            response += f"""
<b>{item[1]}</b> [<i>{status}</i>]
ID –±–æ—Ç–∞: <code>{item[0]}</code>
–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: <i>{item[3]}</i>\n"""
        if not response:
            response = "\n<i>–ü—É—Å—Ç–æ...</i>"
        response = "–í–∞—à–∏ –±–æ—Ç—ã:\n" + response
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "üß© –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
        keyboard.row("üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞", "üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏")
        keyboard.row("üí• –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞", "üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id,
                         response,
                         reply_markup=keyboard,
                         parse_mode='html')
    elif message.text == "üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞":
        response = """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:

–ó–∞–ø—É—Å—Ç–∏—Ç—å - /bot_start {id}
–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å - /bot_stop {id}
"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "üß© –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
        keyboard.row("üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞", "üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏")
        keyboard.row("üí• –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞", "üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id,
                         response,
                         reply_markup=keyboard,
                         parse_mode='html')
    elif message.text == "üß© –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã":
        response = "–û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "üß© –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
        keyboard.row("üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞", "üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏")
        keyboard.row("üí• –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞", "üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id,
                         response,
                         reply_markup=keyboard,
                         parse_mode='html')
    elif message.text == "üí• –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞":
        response = """–£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞

/bot_remove {id}

<b>–í–Ω–∏–º–∞–Ω–∏–µ! –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω.</b>"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "üß© –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
        keyboard.row("üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞", "üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏")
        keyboard.row("üí• –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞", "üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id,
                         response,
                         reply_markup=keyboard,
                         parse_mode='html')
    elif message.text == "üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏":
        response = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:\n\n/bot_logs {id}"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "üß© –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã")
        keyboard.row("üöÄ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞", "üí¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏")
        keyboard.row("üí• –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞", "üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id,
                         response,
                         reply_markup=keyboard,
                         parse_mode='html')
    elif message.text == "üíª –û –ø—Ä–æ–µ–∫—Ç–µ":
        response = '–û –ø—Ä–æ–µ–∫—Ç–µ'
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞")
        keyboard.row("üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id, response, reply_markup=keyboard)
    else:
        response = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—é:'
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        keyboard.row("üîê –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞")
        keyboard.row("üíª –û –ø—Ä–æ–µ–∫—Ç–µ")
        bot.send_message(message.chat.id, response, reply_markup=keyboard)


if __name__ == '__main__':
    if MODE == 1:
        bot.remove_webhook()
        bot.set_webhook(f"https://telegram.itsgay.club/{config.token}")
        cherrypy.config.update({
            'server.socket_host': '127.0.0.1',
            'server.socket_port': 7773,
            'engine.autoreload.on': True
        })
        cherrypy.quickstart(WebhookServer(), '/', {'/': {}})
    elif MODE == 0:
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–∫—Å–∏ (–≤–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏) –≤ —Ñ–∞–π–ª proxy.py
        if PROXYLIST:
            apihelper.proxy = PROXYLIST
        bot.polling(none_stop=True)
